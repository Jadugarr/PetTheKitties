//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity timeSinceLastJumpInputEntity { get { return GetGroup(GameMatcher.TimeSinceLastJumpInput).GetSingleEntity(); } }
    public TimeSinceLastJumpInputComponent timeSinceLastJumpInput { get { return timeSinceLastJumpInputEntity.timeSinceLastJumpInput; } }
    public bool hasTimeSinceLastJumpInput { get { return timeSinceLastJumpInputEntity != null; } }

    public GameEntity SetTimeSinceLastJumpInput(float newValue) {
        if (hasTimeSinceLastJumpInput) {
            throw new Entitas.EntitasException("Could not set TimeSinceLastJumpInput!\n" + this + " already has an entity with TimeSinceLastJumpInputComponent!",
                "You should check if the context already has a timeSinceLastJumpInputEntity before setting it or use context.ReplaceTimeSinceLastJumpInput().");
        }
        var entity = CreateEntity();
        entity.AddTimeSinceLastJumpInput(newValue);
        return entity;
    }

    public void ReplaceTimeSinceLastJumpInput(float newValue) {
        var entity = timeSinceLastJumpInputEntity;
        if (entity == null) {
            entity = SetTimeSinceLastJumpInput(newValue);
        } else {
            entity.ReplaceTimeSinceLastJumpInput(newValue);
        }
    }

    public void RemoveTimeSinceLastJumpInput() {
        timeSinceLastJumpInputEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TimeSinceLastJumpInputComponent timeSinceLastJumpInput { get { return (TimeSinceLastJumpInputComponent)GetComponent(GameComponentsLookup.TimeSinceLastJumpInput); } }
    public bool hasTimeSinceLastJumpInput { get { return HasComponent(GameComponentsLookup.TimeSinceLastJumpInput); } }

    public void AddTimeSinceLastJumpInput(float newValue) {
        var index = GameComponentsLookup.TimeSinceLastJumpInput;
        var component = (TimeSinceLastJumpInputComponent)CreateComponent(index, typeof(TimeSinceLastJumpInputComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTimeSinceLastJumpInput(float newValue) {
        var index = GameComponentsLookup.TimeSinceLastJumpInput;
        var component = (TimeSinceLastJumpInputComponent)CreateComponent(index, typeof(TimeSinceLastJumpInputComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTimeSinceLastJumpInput() {
        RemoveComponent(GameComponentsLookup.TimeSinceLastJumpInput);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTimeSinceLastJumpInput;

    public static Entitas.IMatcher<GameEntity> TimeSinceLastJumpInput {
        get {
            if (_matcherTimeSinceLastJumpInput == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TimeSinceLastJumpInput);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTimeSinceLastJumpInput = matcher;
            }

            return _matcherTimeSinceLastJumpInput;
        }
    }
}
