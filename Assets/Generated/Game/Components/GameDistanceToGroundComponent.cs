//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DistanceToGroundComponent distanceToGround { get { return (DistanceToGroundComponent)GetComponent(GameComponentsLookup.DistanceToGround); } }
    public bool hasDistanceToGround { get { return HasComponent(GameComponentsLookup.DistanceToGround); } }

    public void AddDistanceToGround(float newValue) {
        var index = GameComponentsLookup.DistanceToGround;
        var component = (DistanceToGroundComponent)CreateComponent(index, typeof(DistanceToGroundComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDistanceToGround(float newValue) {
        var index = GameComponentsLookup.DistanceToGround;
        var component = (DistanceToGroundComponent)CreateComponent(index, typeof(DistanceToGroundComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDistanceToGround() {
        RemoveComponent(GameComponentsLookup.DistanceToGround);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDistanceToGround;

    public static Entitas.IMatcher<GameEntity> DistanceToGround {
        get {
            if (_matcherDistanceToGround == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DistanceToGround);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDistanceToGround = matcher;
            }

            return _matcherDistanceToGround;
        }
    }
}
