//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public JumpStateComponent jumpState { get { return (JumpStateComponent)GetComponent(GameComponentsLookup.JumpState); } }
    public bool hasJumpState { get { return HasComponent(GameComponentsLookup.JumpState); } }

    public void AddJumpState(JumpState newJumpState) {
        var index = GameComponentsLookup.JumpState;
        var component = (JumpStateComponent)CreateComponent(index, typeof(JumpStateComponent));
        component.JumpState = newJumpState;
        AddComponent(index, component);
    }

    public void ReplaceJumpState(JumpState newJumpState) {
        var index = GameComponentsLookup.JumpState;
        var component = (JumpStateComponent)CreateComponent(index, typeof(JumpStateComponent));
        component.JumpState = newJumpState;
        ReplaceComponent(index, component);
    }

    public void RemoveJumpState() {
        RemoveComponent(GameComponentsLookup.JumpState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherJumpState;

    public static Entitas.IMatcher<GameEntity> JumpState {
        get {
            if (_matcherJumpState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.JumpState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherJumpState = matcher;
            }

            return _matcherJumpState;
        }
    }
}
