//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BackgroundComponent background { get { return (BackgroundComponent)GetComponent(GameComponentsLookup.Background); } }
    public bool hasBackground { get { return HasComponent(GameComponentsLookup.Background); } }

    public void AddBackground(UnityEngine.SpriteRenderer newBackgroundSpriteRenderers) {
        var index = GameComponentsLookup.Background;
        var component = (BackgroundComponent)CreateComponent(index, typeof(BackgroundComponent));
        component.BackgroundSpriteRenderers = newBackgroundSpriteRenderers;
        AddComponent(index, component);
    }

    public void ReplaceBackground(UnityEngine.SpriteRenderer newBackgroundSpriteRenderers) {
        var index = GameComponentsLookup.Background;
        var component = (BackgroundComponent)CreateComponent(index, typeof(BackgroundComponent));
        component.BackgroundSpriteRenderers = newBackgroundSpriteRenderers;
        ReplaceComponent(index, component);
    }

    public void RemoveBackground() {
        RemoveComponent(GameComponentsLookup.Background);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBackground;

    public static Entitas.IMatcher<GameEntity> Background {
        get {
            if (_matcherBackground == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Background);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBackground = matcher;
            }

            return _matcherBackground;
        }
    }
}
