//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity worldStateEntity { get { return GetGroup(GameMatcher.WorldState).GetSingleEntity(); } }
    public WorldStateComponent worldState { get { return worldStateEntity.worldState; } }
    public bool hasWorldState { get { return worldStateEntity != null; } }

    public GameEntity SetWorldState(Entitas.World.WorldState newCurrentWorldState, Entitas.World.WorldState newPreviousWorldState) {
        if (hasWorldState) {
            throw new Entitas.EntitasException("Could not set WorldState!\n" + this + " already has an entity with WorldStateComponent!",
                "You should check if the context already has a worldStateEntity before setting it or use context.ReplaceWorldState().");
        }
        var entity = CreateEntity();
        entity.AddWorldState(newCurrentWorldState, newPreviousWorldState);
        return entity;
    }

    public void ReplaceWorldState(Entitas.World.WorldState newCurrentWorldState, Entitas.World.WorldState newPreviousWorldState) {
        var entity = worldStateEntity;
        if (entity == null) {
            entity = SetWorldState(newCurrentWorldState, newPreviousWorldState);
        } else {
            entity.ReplaceWorldState(newCurrentWorldState, newPreviousWorldState);
        }
    }

    public void RemoveWorldState() {
        worldStateEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WorldStateComponent worldState { get { return (WorldStateComponent)GetComponent(GameComponentsLookup.WorldState); } }
    public bool hasWorldState { get { return HasComponent(GameComponentsLookup.WorldState); } }

    public void AddWorldState(Entitas.World.WorldState newCurrentWorldState, Entitas.World.WorldState newPreviousWorldState) {
        var index = GameComponentsLookup.WorldState;
        var component = (WorldStateComponent)CreateComponent(index, typeof(WorldStateComponent));
        component.CurrentWorldState = newCurrentWorldState;
        component.PreviousWorldState = newPreviousWorldState;
        AddComponent(index, component);
    }

    public void ReplaceWorldState(Entitas.World.WorldState newCurrentWorldState, Entitas.World.WorldState newPreviousWorldState) {
        var index = GameComponentsLookup.WorldState;
        var component = (WorldStateComponent)CreateComponent(index, typeof(WorldStateComponent));
        component.CurrentWorldState = newCurrentWorldState;
        component.PreviousWorldState = newPreviousWorldState;
        ReplaceComponent(index, component);
    }

    public void RemoveWorldState() {
        RemoveComponent(GameComponentsLookup.WorldState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWorldState;

    public static Entitas.IMatcher<GameEntity> WorldState {
        get {
            if (_matcherWorldState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WorldState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWorldState = matcher;
            }

            return _matcherWorldState;
        }
    }
}
