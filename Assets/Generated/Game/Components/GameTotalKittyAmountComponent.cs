//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity totalKittyAmountEntity { get { return GetGroup(GameMatcher.TotalKittyAmount).GetSingleEntity(); } }
    public TotalKittyAmountComponent totalKittyAmount { get { return totalKittyAmountEntity.totalKittyAmount; } }
    public bool hasTotalKittyAmount { get { return totalKittyAmountEntity != null; } }

    public GameEntity SetTotalKittyAmount(int newTotalKittyAmount) {
        if (hasTotalKittyAmount) {
            throw new Entitas.EntitasException("Could not set TotalKittyAmount!\n" + this + " already has an entity with TotalKittyAmountComponent!",
                "You should check if the context already has a totalKittyAmountEntity before setting it or use context.ReplaceTotalKittyAmount().");
        }
        var entity = CreateEntity();
        entity.AddTotalKittyAmount(newTotalKittyAmount);
        return entity;
    }

    public void ReplaceTotalKittyAmount(int newTotalKittyAmount) {
        var entity = totalKittyAmountEntity;
        if (entity == null) {
            entity = SetTotalKittyAmount(newTotalKittyAmount);
        } else {
            entity.ReplaceTotalKittyAmount(newTotalKittyAmount);
        }
    }

    public void RemoveTotalKittyAmount() {
        totalKittyAmountEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TotalKittyAmountComponent totalKittyAmount { get { return (TotalKittyAmountComponent)GetComponent(GameComponentsLookup.TotalKittyAmount); } }
    public bool hasTotalKittyAmount { get { return HasComponent(GameComponentsLookup.TotalKittyAmount); } }

    public void AddTotalKittyAmount(int newTotalKittyAmount) {
        var index = GameComponentsLookup.TotalKittyAmount;
        var component = (TotalKittyAmountComponent)CreateComponent(index, typeof(TotalKittyAmountComponent));
        component.TotalKittyAmount = newTotalKittyAmount;
        AddComponent(index, component);
    }

    public void ReplaceTotalKittyAmount(int newTotalKittyAmount) {
        var index = GameComponentsLookup.TotalKittyAmount;
        var component = (TotalKittyAmountComponent)CreateComponent(index, typeof(TotalKittyAmountComponent));
        component.TotalKittyAmount = newTotalKittyAmount;
        ReplaceComponent(index, component);
    }

    public void RemoveTotalKittyAmount() {
        RemoveComponent(GameComponentsLookup.TotalKittyAmount);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTotalKittyAmount;

    public static Entitas.IMatcher<GameEntity> TotalKittyAmount {
        get {
            if (_matcherTotalKittyAmount == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TotalKittyAmount);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTotalKittyAmount = matcher;
            }

            return _matcherTotalKittyAmount;
        }
    }
}
