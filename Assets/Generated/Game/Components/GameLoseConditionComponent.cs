//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity loseConditionEntity { get { return GetGroup(GameMatcher.LoseCondition).GetSingleEntity(); } }
    public LoseConditionComponent loseCondition { get { return loseConditionEntity.loseCondition; } }
    public bool hasLoseCondition { get { return loseConditionEntity != null; } }

    public GameEntity SetLoseCondition(ConditionModifier newConditionModifier, LoseConditionState[] newLoseConditions) {
        if (hasLoseCondition) {
            throw new Entitas.EntitasException("Could not set LoseCondition!\n" + this + " already has an entity with LoseConditionComponent!",
                "You should check if the context already has a loseConditionEntity before setting it or use context.ReplaceLoseCondition().");
        }
        var entity = CreateEntity();
        entity.AddLoseCondition(newConditionModifier, newLoseConditions);
        return entity;
    }

    public void ReplaceLoseCondition(ConditionModifier newConditionModifier, LoseConditionState[] newLoseConditions) {
        var entity = loseConditionEntity;
        if (entity == null) {
            entity = SetLoseCondition(newConditionModifier, newLoseConditions);
        } else {
            entity.ReplaceLoseCondition(newConditionModifier, newLoseConditions);
        }
    }

    public void RemoveLoseCondition() {
        loseConditionEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LoseConditionComponent loseCondition { get { return (LoseConditionComponent)GetComponent(GameComponentsLookup.LoseCondition); } }
    public bool hasLoseCondition { get { return HasComponent(GameComponentsLookup.LoseCondition); } }

    public void AddLoseCondition(ConditionModifier newConditionModifier, LoseConditionState[] newLoseConditions) {
        var index = GameComponentsLookup.LoseCondition;
        var component = (LoseConditionComponent)CreateComponent(index, typeof(LoseConditionComponent));
        component.ConditionModifier = newConditionModifier;
        component.LoseConditions = newLoseConditions;
        AddComponent(index, component);
    }

    public void ReplaceLoseCondition(ConditionModifier newConditionModifier, LoseConditionState[] newLoseConditions) {
        var index = GameComponentsLookup.LoseCondition;
        var component = (LoseConditionComponent)CreateComponent(index, typeof(LoseConditionComponent));
        component.ConditionModifier = newConditionModifier;
        component.LoseConditions = newLoseConditions;
        ReplaceComponent(index, component);
    }

    public void RemoveLoseCondition() {
        RemoveComponent(GameComponentsLookup.LoseCondition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLoseCondition;

    public static Entitas.IMatcher<GameEntity> LoseCondition {
        get {
            if (_matcherLoseCondition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LoseCondition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLoseCondition = matcher;
            }

            return _matcherLoseCondition;
        }
    }
}
