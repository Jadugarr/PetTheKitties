//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity playerInteractionEntity { get { return GetGroup(GameMatcher.PlayerInteraction).GetSingleEntity(); } }
    public Entitas.Kitty.Components.PlayerInteractionComponent playerInteraction { get { return playerInteractionEntity.playerInteraction; } }
    public bool hasPlayerInteraction { get { return playerInteractionEntity != null; } }

    public GameEntity SetPlayerInteraction(int newInteractableEntityId) {
        if (hasPlayerInteraction) {
            throw new Entitas.EntitasException("Could not set PlayerInteraction!\n" + this + " already has an entity with Entitas.Kitty.Components.PlayerInteractionComponent!",
                "You should check if the context already has a playerInteractionEntity before setting it or use context.ReplacePlayerInteraction().");
        }
        var entity = CreateEntity();
        entity.AddPlayerInteraction(newInteractableEntityId);
        return entity;
    }

    public void ReplacePlayerInteraction(int newInteractableEntityId) {
        var entity = playerInteractionEntity;
        if (entity == null) {
            entity = SetPlayerInteraction(newInteractableEntityId);
        } else {
            entity.ReplacePlayerInteraction(newInteractableEntityId);
        }
    }

    public void RemovePlayerInteraction() {
        playerInteractionEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Kitty.Components.PlayerInteractionComponent playerInteraction { get { return (Entitas.Kitty.Components.PlayerInteractionComponent)GetComponent(GameComponentsLookup.PlayerInteraction); } }
    public bool hasPlayerInteraction { get { return HasComponent(GameComponentsLookup.PlayerInteraction); } }

    public void AddPlayerInteraction(int newInteractableEntityId) {
        var index = GameComponentsLookup.PlayerInteraction;
        var component = (Entitas.Kitty.Components.PlayerInteractionComponent)CreateComponent(index, typeof(Entitas.Kitty.Components.PlayerInteractionComponent));
        component.InteractableEntityId = newInteractableEntityId;
        AddComponent(index, component);
    }

    public void ReplacePlayerInteraction(int newInteractableEntityId) {
        var index = GameComponentsLookup.PlayerInteraction;
        var component = (Entitas.Kitty.Components.PlayerInteractionComponent)CreateComponent(index, typeof(Entitas.Kitty.Components.PlayerInteractionComponent));
        component.InteractableEntityId = newInteractableEntityId;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerInteraction() {
        RemoveComponent(GameComponentsLookup.PlayerInteraction);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerInteraction;

    public static Entitas.IMatcher<GameEntity> PlayerInteraction {
        get {
            if (_matcherPlayerInteraction == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerInteraction);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerInteraction = matcher;
            }

            return _matcherPlayerInteraction;
        }
    }
}
