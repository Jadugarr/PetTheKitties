//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ExecutionTimeComponent executionTime { get { return (ExecutionTimeComponent)GetComponent(GameComponentsLookup.ExecutionTime); } }
    public bool hasExecutionTime { get { return HasComponent(GameComponentsLookup.ExecutionTime); } }

    public void AddExecutionTime(float newTotalTime, float newRemainingTime) {
        var index = GameComponentsLookup.ExecutionTime;
        var component = (ExecutionTimeComponent)CreateComponent(index, typeof(ExecutionTimeComponent));
        component.TotalTime = newTotalTime;
        component.RemainingTime = newRemainingTime;
        AddComponent(index, component);
    }

    public void ReplaceExecutionTime(float newTotalTime, float newRemainingTime) {
        var index = GameComponentsLookup.ExecutionTime;
        var component = (ExecutionTimeComponent)CreateComponent(index, typeof(ExecutionTimeComponent));
        component.TotalTime = newTotalTime;
        component.RemainingTime = newRemainingTime;
        ReplaceComponent(index, component);
    }

    public void RemoveExecutionTime() {
        RemoveComponent(GameComponentsLookup.ExecutionTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherExecutionTime;

    public static Entitas.IMatcher<GameEntity> ExecutionTime {
        get {
            if (_matcherExecutionTime == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ExecutionTime);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherExecutionTime = matcher;
            }

            return _matcherExecutionTime;
        }
    }
}
