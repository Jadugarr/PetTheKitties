//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GrapplingHookSpeedComponent grapplingHookSpeed { get { return (GrapplingHookSpeedComponent)GetComponent(GameComponentsLookup.GrapplingHookSpeed); } }
    public bool hasGrapplingHookSpeed { get { return HasComponent(GameComponentsLookup.GrapplingHookSpeed); } }

    public void AddGrapplingHookSpeed(float newValue) {
        var index = GameComponentsLookup.GrapplingHookSpeed;
        var component = (GrapplingHookSpeedComponent)CreateComponent(index, typeof(GrapplingHookSpeedComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGrapplingHookSpeed(float newValue) {
        var index = GameComponentsLookup.GrapplingHookSpeed;
        var component = (GrapplingHookSpeedComponent)CreateComponent(index, typeof(GrapplingHookSpeedComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGrapplingHookSpeed() {
        RemoveComponent(GameComponentsLookup.GrapplingHookSpeed);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGrapplingHookSpeed;

    public static Entitas.IMatcher<GameEntity> GrapplingHookSpeed {
        get {
            if (_matcherGrapplingHookSpeed == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GrapplingHookSpeed);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGrapplingHookSpeed = matcher;
            }

            return _matcherGrapplingHookSpeed;
        }
    }
}
