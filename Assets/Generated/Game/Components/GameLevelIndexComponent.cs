//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LevelIndexComponent levelIndex { get { return (LevelIndexComponent)GetComponent(GameComponentsLookup.LevelIndex); } }
    public bool hasLevelIndex { get { return HasComponent(GameComponentsLookup.LevelIndex); } }

    public void AddLevelIndex(int newValue) {
        var index = GameComponentsLookup.LevelIndex;
        var component = (LevelIndexComponent)CreateComponent(index, typeof(LevelIndexComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceLevelIndex(int newValue) {
        var index = GameComponentsLookup.LevelIndex;
        var component = (LevelIndexComponent)CreateComponent(index, typeof(LevelIndexComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveLevelIndex() {
        RemoveComponent(GameComponentsLookup.LevelIndex);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLevelIndex;

    public static Entitas.IMatcher<GameEntity> LevelIndex {
        get {
            if (_matcherLevelIndex == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LevelIndex);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLevelIndex = matcher;
            }

            return _matcherLevelIndex;
        }
    }
}
