//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CharacterBattleStateComponent characterBattleState { get { return (CharacterBattleStateComponent)GetComponent(GameComponentsLookup.CharacterBattleState); } }
    public bool hasCharacterBattleState { get { return HasComponent(GameComponentsLookup.CharacterBattleState); } }

    public void AddCharacterBattleState(CharacterBattleState newBattleState) {
        var index = GameComponentsLookup.CharacterBattleState;
        var component = (CharacterBattleStateComponent)CreateComponent(index, typeof(CharacterBattleStateComponent));
        component.BattleState = newBattleState;
        AddComponent(index, component);
    }

    public void ReplaceCharacterBattleState(CharacterBattleState newBattleState) {
        var index = GameComponentsLookup.CharacterBattleState;
        var component = (CharacterBattleStateComponent)CreateComponent(index, typeof(CharacterBattleStateComponent));
        component.BattleState = newBattleState;
        ReplaceComponent(index, component);
    }

    public void RemoveCharacterBattleState() {
        RemoveComponent(GameComponentsLookup.CharacterBattleState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCharacterBattleState;

    public static Entitas.IMatcher<GameEntity> CharacterBattleState {
        get {
            if (_matcherCharacterBattleState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CharacterBattleState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCharacterBattleState = matcher;
            }

            return _matcherCharacterBattleState;
        }
    }
}
